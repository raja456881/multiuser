# Generated by Django 3.0.7 on 2020-09-27 11:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_trainer', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('is_institute', models.BooleanField(default=False)),
                ('is_franchise', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='admin', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('adminFullName', models.CharField(blank=True, max_length=150)),
                ('adminGender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='', max_length=30)),
                ('adminAbout', models.TextField(blank=True, null=True)),
                ('adminEmail', models.EmailField(blank=True, max_length=100)),
                ('adminImage', models.FileField(blank=True, null=True, upload_to='Admin_image/')),
                ('adminPhoneNo1', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('adminPhoneNo2', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('adminAddress', models.CharField(blank=True, max_length=500)),
                ('adminCity', models.CharField(blank=True, max_length=50)),
                ('adminPostalCode', models.IntegerField(blank=True, null=True)),
                ('adminState', models.CharField(blank=True, max_length=50)),
                ('adminCountry', models.CharField(default='', max_length=20)),
                ('adminStatus', models.CharField(choices=[('Verified', 'Verified'), ('Pending', 'Pending'), ('Discarded', 'Discarded')], default='Pending', max_length=30)),
                ('adminAddedDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FranchiseProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('franchiseName', models.CharField(blank=True, max_length=200)),
                ('franchiseAbout', models.TextField(blank=True, null=True)),
                ('franchiseEmail', models.EmailField(blank=True, max_length=100)),
                ('franchiseImage', models.FileField(blank=True, null=True, upload_to='Franchise_image/')),
                ('franchisePhoneNo1', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('franchisePhoneNo2', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('franchiseAddress', models.CharField(blank=True, max_length=500)),
                ('franchiseCity', models.CharField(blank=True, max_length=50)),
                ('franchisePostalCode', models.IntegerField(blank=True, null=True)),
                ('franchiseState', models.CharField(blank=True, max_length=50)),
                ('franchiseCountry', models.CharField(default='', max_length=20)),
                ('franchiseStatus', models.CharField(choices=[('Verified', 'Verified'), ('Pending', 'Pending'), ('Discarded', 'Discarded')], default='Pending', max_length=30)),
                ('franchiseAddedDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='InstituteProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('instituteName', models.CharField(blank=True, max_length=200)),
                ('instituteAbout', models.TextField(blank=True, null=True)),
                ('instituteEmail', models.EmailField(blank=True, max_length=100)),
                ('instituteImage', models.FileField(blank=True, null=True, upload_to='Institute_image/')),
                ('institutePhoneNo1', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('institutePhoneNo2', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('instituteAddress', models.CharField(blank=True, max_length=500)),
                ('instituteCity', models.CharField(blank=True, max_length=50)),
                ('institutePostalCode', models.IntegerField(blank=True, null=True)),
                ('instituteState', models.CharField(blank=True, max_length=50)),
                ('instituteCountry', models.CharField(default='', max_length=20)),
                ('instituteStatus', models.CharField(choices=[('Verified', 'Verified'), ('Pending', 'Pending'), ('Discarded', 'Discarded')], default='Pending', max_length=30)),
                ('instituteAddedDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrainerProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('trainerFullName', models.CharField(blank=True, max_length=150)),
                ('trainerGender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='', max_length=30)),
                ('trainerAbout', models.TextField(blank=True, null=True)),
                ('trainerEmail', models.EmailField(blank=True, max_length=100)),
                ('trainerImage', models.FileField(blank=True, null=True, upload_to='Trainer_image/')),
                ('trainerPhoneNo1', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('trainerPhoneNo2', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('trainerAddress', models.CharField(blank=True, max_length=500)),
                ('trainerCity', models.CharField(blank=True, max_length=50)),
                ('trainerPostalCode', models.IntegerField(blank=True, null=True)),
                ('trainerState', models.CharField(blank=True, max_length=50)),
                ('trainerCountry', models.CharField(default='', max_length=20)),
                ('trainerStatus', models.CharField(choices=[('Verified', 'Verified'), ('Pending', 'Pending'), ('Discarded', 'Discarded')], default='Pending', max_length=30)),
                ('trainerAddedDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
